# credits to https://github.com/salihmarangoz/github_ci_nbconvert
# This is a basic workflow to help you get started with Actions

name: Convert ipynb files to html

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the given branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install nbconvert
        run: pip install nbconvert
  
      - name: Convert all ipynb files to html (and here, commented out where we could be deleting our ipynb files)
        run: find . -name '*.ipynb' -type f -execdir jupyter nbconvert --template classic --to html {} \; #; -execdir rm {} \;

      - name: Push notebooks folder to the master branch
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          FOLDER: notebooks # The directory where your assets are generated
          BRANCH: build # The branch name where you want to push the assets
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message
          SQUASH_HISTORY: false # If set to true, all previous commits on the target branch will be discarded. For example, if you are deploying a static site with lots of binary artifacts, this can help the repository becoming overly bloated.
